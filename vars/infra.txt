<strong>infra.isTrusted()</strong>

<p>
    Returns true if this Pipeline is executing on a trusted CI environment
</p>

<strong>infra.isRunningOnJenkinsInfra()</strong>

<p>
    Returns true if this Pipeline is executing on Jenkins infrastructure.
    It may be ci.jenkins.io or trusted CI environment
</p>

<strong>infra.withDockerCredentials(Closure body)</strong>

<p>
    Runs the specified Closure with Docker credentials.
    Note that the credentials are available only on trusted CI environment, execution will fail on other CI instances
</p>

<strong>infra.retrieveMavenSettingsFile(String settingsXml)</strong>

<p>
    Retrieves a custom Maven settings file to the specified path if needed
    (depending on the environment where the Pipeline runs).
    Returns true if the file has been retrieved.
    <strong>Note<strong>: currently does not return an interesting file.
</p>

<p>
    See method Javadoc in the repository for more information.
</p>

<strong>infra.runMaven(List&lt;String&gt; options, String jdk = 8, List&lt;String&gt; extraEnv = null, String settingsFile = null)</strong>

<p>
    Runs Maven for the specified options in the current workspace.
    If <code>settingsFile</code> is <code>null</code>, Maven settings will be added usin <code>retrieveMavenSettingsFile</code>.
</p>

<p>
    See method Javadoc in the repository for more information.
</p>

<strong>runWithMaven(String command, String jdk = 8, List&lt;String&gt; extraEnv = null)</strong>

<p>
     Runs the specified command with Java and Maven environments.
     The command may be either Batch or Shell depending on the OS.
</p>

<p>
    See method Javadoc in the repository for more information.
</p>

<strong>runWithJava(String command, String jdk = 8, List&lt;String&gt; extraEnv = null)</strong>

<p>
     Runs the specified command with Java tool.
     <code>PATH</code> and <code>JAVA_HOME</code> will be set.
     The command may be either Batch or Shell depending on the OS.
</p>

<p>
    See method Javadoc in the repository for more information.
</p>

<strong>infra.stashJenkinsWar(jenkins, stashName)</strong>

<p>
    Gets a specification for a jenkins version or war and downloads and stashes it under the name provided
</p>

<strong>infra.ensureInNode(nodeLabels, body)</strong>

<p>
    Runs a code block in a node with the all the specified nodeLabels as labels, if already running in that node it simply
    executes the code block, if not allocates the desired node and runs the code inside it. Node labels must be specified
    as String formed by a comma separated list of labels
    <b>Please note that this step is not able to manage complex labels and checks for them literally, so do not try to use labels like 'docker,(lowmemory&&linux)' as it will result in
    the step launching a new node as is unable to find the label '(lowmemory&amp;&amp;linux)' in the list of labels for the current node</b>
</p>

<!--
vim: ft=html
-->
