This pipeline combines "buildDockerAndPublishImage" and "updatecli" shared pipelines. It lints, Builds, Tests and eventually Publishes a Docker image, and run in parallel updatecli.

The following arguments are available for this function:

- String **imageName**: (Mandatory) name of the image to built, usually referenced as the "Repository" part of a Docker image's name without any tag (Example: "builder" or "terraform").
- String **rebuildImageOnPeriodicJob**: (Optional - Default: true) specify if the docker image has to be rebuilt and republished when triggered by a periodic job.
- String **updatecliApplyCronTriggerExpression**: (Optional - Default: "@weekly") Enable periodic updatecli execution by providing a cron-like expression.
- String **updatecliCredentialsId**: (Optional - Default: "github-app-updatecli-on-jenkins-infra") specify the credentials used by updatecli to interact with github.
- String **buildDockerAndPublishImageCredentialsId**: (Optional - Default: "github-app-infra") specify the credentials used by the buildDockerAndPublishImage shared pipeline to interact with github.
- Map **updatecliConfig** (Optional - Default: empty map) specify custom parameters for the underlying "updatecli()" actions. Please look at the "updatecli()" global library documentation.

[Deprecated]
- String **containerMemory**: (Optional - Default: "128Mi") specify the amount of memory dedicated to the updatecli container.
- String **mainBranch**: (Optional - Default: "main") name of the main branch of the repository

Examples:
<code>
// build and publish the docker image, and in parallel run "updatecli diff" command and also "updatecli apply" if the pipeline is on the main branch.
parallelDockerUpdatecli([imageName: 'myDockerImage'])

// build and publish the docker image only if there is a code change, and in parallel run "updatecli diff" command and also "updatecli apply" if the pipeline is on the main branch.
parallelDockerUpdatecli([imageName: 'myDockerImage', rebuildImageOnPeriodicJob: false])
</code>
